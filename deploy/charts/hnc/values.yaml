# Default values for HNC
# This is a YAML-formatted file.

# Application configuration
app:
  name: hnc
  version: "0.5.0-alpha"

# Image configuration
image:
  repository: nginx
  tag: "1.25-alpine"
  pullPolicy: IfNotPresent

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# Deployment configuration
replicaCount: 1

# Container resources
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

# Service configuration
service:
  type: ClusterIP
  port: 80
  targetPort: 80

# Ingress configuration
ingress:
  enabled: true
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  hosts:
    - host: hnc.local
      paths:
        - path: /
          pathType: Prefix
  tls: []

# Environment configuration - Feature Flags
env:
  # Core Configuration
  HNC_VERBOSE: "false"
  
  # Feature Flags - Enable/disable major functionality
  FEATURE_GIT: "true"
  FEATURE_K8S: "true"
  FEATURE_HHFAB: "false"
  FEATURE_GH_PR: "false"
  
  # GitHub Integration (optional)
  GITHUB_TOKEN: ""
  GIT_REMOTE: "origin"
  
  # Kubernetes Integration
  KUBECONFIG: ""
  
  # Validation Configuration
  HHFAB: "/usr/local/bin/hhfab"
  
  # Test Configuration
  TEST_FGD_FILE: "test-output/test-fabric.yaml"
  TEST_K8S_NAMESPACE: "hnc-test"
  
  # Performance Tuning
  PLAYWRIGHT_MAX_WORKERS: "1"
  VITEST_MAX_WORKERS: "4"

# Secrets configuration (for sensitive data like tokens)
secrets:
  github:
    enabled: false
    # If enabled, create a secret with the GitHub token
    # The secret will be mounted as environment variables
    token: ""

# ConfigMap for static files or configuration
configMap:
  # Mount additional configuration files if needed
  enabled: false
  data: {}

# Health checks
healthCheck:
  enabled: true
  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3

# Pod security context
podSecurityContext:
  fsGroup: 2000

# Container security context
securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

# Node selector
nodeSelector: {}

# Tolerations
tolerations: []

# Affinity
affinity: {}

# Autoscaling (disabled by default for single-node k3s)
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Persistence (for storing generated configurations)
persistence:
  enabled: false
  storageClass: ""
  accessMode: ReadWriteOnce
  size: 1Gi
  mountPath: /app/data

# Init containers (for setup tasks)
initContainers: []

# Sidecar containers
sidecars: []

# Additional volumes
extraVolumes: []

# Additional volume mounts
extraVolumeMounts: []

# Pod annotations
podAnnotations: {}

# Pod labels
podLabels: {}

# Service annotations
serviceAnnotations: {}

# Deployment annotations
deploymentAnnotations: {}