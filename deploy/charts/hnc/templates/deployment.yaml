apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hnc.fullname" . }}
  labels:
    {{- include "hnc.labels" . | nindent 4 }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hnc.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hnc.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hnc.serviceAccountName" . }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            {{- toYaml .Values.healthCheck.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.healthCheck.readinessProbe | nindent 12 }}
          {{- end }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- if .Values.secrets.github.enabled }}
            {{- if .Values.secrets.github.existingSecret }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.github.existingSecret }}
                  key: {{ .Values.secrets.github.existingSecretKey | default "token" }}
            {{- else }}
            - name: GITHUB_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "hnc.fullname" . }}-github
                  key: token
            {{- end }}
            {{- end }}
            {{- if .Values.secrets.kubeconfig.enabled }}
            {{- if .Values.secrets.kubeconfig.existingSecret }}
            - name: KUBECONFIG_CONTENT
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.kubeconfig.existingSecret }}
                  key: {{ .Values.secrets.kubeconfig.existingSecretKey | default "config" }}
            {{- else }}
            - name: KUBECONFIG_CONTENT
              valueFrom:
                secretKeyRef:
                  name: {{ include "hnc.fullname" . }}-kubeconfig
                  key: config
            {{- end }}
            {{- end }}
            # Cluster information
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: var-cache-nginx
              mountPath: /var/cache/nginx
            - name: var-run
              mountPath: /var/run
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
            {{- end }}
            {{- if .Values.configMap.enabled }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
            {{- if .Values.secrets.tls.enabled }}
            - name: tls-certs
              mountPath: /etc/ssl/certs/app
              readOnly: true
            {{- end }}
            {{- if .Values.secrets.kubeconfig.enabled }}
            - name: kubeconfig
              mountPath: /etc/kubeconfig
              readOnly: true
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- with .Values.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: var-cache-nginx
          emptyDir: {}
        - name: var-run
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "hnc.fullname" . }}-data
        {{- end }}
        {{- if .Values.configMap.enabled }}
        - name: config
          configMap:
            name: {{ include "hnc.fullname" . }}-config
            defaultMode: 0644
        {{- end }}
        {{- if .Values.secrets.tls.enabled }}
        - name: tls-certs
          secret:
            {{- if .Values.secrets.tls.existingSecret }}
            secretName: {{ .Values.secrets.tls.existingSecret }}
            {{- else }}
            secretName: {{ include "hnc.fullname" . }}-tls
            {{- end }}
            defaultMode: 0400
        {{- end }}
        {{- if .Values.secrets.kubeconfig.enabled }}
        - name: kubeconfig
          secret:
            {{- if .Values.secrets.kubeconfig.existingSecret }}
            secretName: {{ .Values.secrets.kubeconfig.existingSecret }}
            {{- else }}
            secretName: {{ include "hnc.fullname" . }}-kubeconfig
            {{- end }}
            defaultMode: 0400
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}